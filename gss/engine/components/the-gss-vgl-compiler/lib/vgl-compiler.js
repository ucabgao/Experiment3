module.exports = (function(){
  /*
   * Generated by PEG.js 0.7.0.
   *
   * http://pegjs.majda.cz/
   */
  
  function quote(s) {
    /*
     * ECMA-262, 5th ed., 7.8.4: All characters may appear literally in a
     * string literal except for the closing quote character, backslash,
     * carriage return, line separator, paragraph separator, and line feed.
     * Any character may appear in the form of an escape sequence.
     *
     * For portability, we also escape escape all control and non-ASCII
     * characters. Note that "\0" and "\v" escape sequences are not used
     * because JSHint does not like the first and IE the second.
     */
     return '"' + s
      .replace(/\\/g, '\\\\')  // backslash
      .replace(/"/g, '\\"')    // closing quote character
      .replace(/\x08/g, '\\b') // backspace
      .replace(/\t/g, '\\t')   // horizontal tab
      .replace(/\n/g, '\\n')   // line feed
      .replace(/\f/g, '\\f')   // form feed
      .replace(/\r/g, '\\r')   // carriage return
      .replace(/[\x00-\x07\x0B\x0E-\x1F\x80-\uFFFF]/g, escape)
      + '"';
  }
  
  var result = {
    /*
     * Parses the input with a generated parser. If the parsing is successfull,
     * returns a value explicitly or implicitly specified by the grammar from
     * which the parser was generated (see |PEG.buildParser|). If the parsing is
     * unsuccessful, throws |PEG.parser.SyntaxError| describing the error.
     */
    parse: function(input, startRule) {
      var parseFunctions = {
        "start": parse_start,
        "Statement": parse_Statement,
        "VGLStatement": parse_VGLStatement,
        "RowsCols": parse_RowsCols,
        "Template": parse_Template,
        "TemplateLine": parse_TemplateLine,
        "TemplateOptions": parse_TemplateOptions,
        "TemplateOption": parse_TemplateOption,
        "OpionValueChars": parse_OpionValueChars,
        "TemplateZone": parse_TemplateZone,
        "RowColDimension": parse_RowColDimension,
        "Line": parse_Line,
        "LineChunk": parse_LineChunk,
        "Connection": parse_Connection,
        "ConnectionTypes": parse_ConnectionTypes,
        "VirtualNameChars": parse_VirtualNameChars,
        "NameChars": parse_NameChars,
        "NameCharsWithSpace": parse_NameCharsWithSpace,
        "Literal": parse_Literal,
        "Number": parse_Number,
        "Integer": parse_Integer,
        "Real": parse_Real,
        "SignedInteger": parse_SignedInteger,
        "SourceCharacter": parse_SourceCharacter,
        "WhiteSpace": parse_WhiteSpace,
        "LineTerminator": parse_LineTerminator,
        "LineTerminatorSequence": parse_LineTerminatorSequence,
        "AnyChar": parse_AnyChar,
        "EOS": parse_EOS,
        "EOF": parse_EOF,
        "Comment": parse_Comment,
        "MultiLineComment": parse_MultiLineComment,
        "MultiLineCommentNoLineTerminator": parse_MultiLineCommentNoLineTerminator,
        "SingleLineComment": parse_SingleLineComment,
        "_": parse__,
        "__": parse___
      };
      
      if (startRule !== undefined) {
        if (parseFunctions[startRule] === undefined) {
          throw new Error("Invalid rule name: " + quote(startRule) + ".");
        }
      } else {
        startRule = "start";
      }
      
      var pos = 0;
      var reportFailures = 0;
      var rightmostFailuresPos = 0;
      var rightmostFailuresExpected = [];
      
      function padLeft(input, padding, length) {
        var result = input;
        
        var padLength = length - input.length;
        for (var i = 0; i < padLength; i++) {
          result = padding + result;
        }
        
        return result;
      }
      
      function escape(ch) {
        var charCode = ch.charCodeAt(0);
        var escapeChar;
        var length;
        
        if (charCode <= 0xFF) {
          escapeChar = 'x';
          length = 2;
        } else {
          escapeChar = 'u';
          length = 4;
        }
        
        return '\\' + escapeChar + padLeft(charCode.toString(16).toUpperCase(), '0', length);
      }
      
      function matchFailed(failure) {
        if (pos < rightmostFailuresPos) {
          return;
        }
        
        if (pos > rightmostFailuresPos) {
          rightmostFailuresPos = pos;
          rightmostFailuresExpected = [];
        }
        
        rightmostFailuresExpected.push(failure);
      }
      
      function parse_start() {
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse___();
        if (result0 !== null) {
          result1 = [];
          result2 = parse_Statement();
          while (result2 !== null) {
            result1.push(result2);
            result2 = parse_Statement();
          }
          if (result1 !== null) {
            result2 = parse___();
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) {return p.getResults()})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        return result0;
      }
      
      function parse_Statement() {
        var result0, result1, result2, result3;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        if (input.charCodeAt(pos) === 64) {
          result0 = "@";
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("\"@\"");
          }
        }
        if (result0 !== null) {
          result1 = parse_VGLStatement();
          if (result1 !== null) {
            result2 = parse_EOS();
            if (result2 !== null) {
              result3 = parse___();
              if (result3 !== null) {
                result0 = [result0, result1, result2, result3];
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, vfls) { return vfls; })(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        return result0;
      }
      
      function parse_VGLStatement() {
        var result0;
        
        result0 = parse_RowsCols();
        if (result0 === null) {
          result0 = parse_Template();
        }
        return result0;
      }
      
      function parse_RowsCols() {
        var result0, result1, result2, result3, result4, result5, result6, result7, result8;
        var pos0, pos1;
        
        reportFailures++;
        pos0 = pos;
        pos1 = pos;
        if (input.substr(pos, 5) === "grid-") {
          result0 = "grid-";
          pos += 5;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("\"grid-\"");
          }
        }
        if (result0 === null) {
          if (input.substr(pos, 10) === "-gss-grid-") {
            result0 = "-gss-grid-";
            pos += 10;
          } else {
            result0 = null;
            if (reportFailures === 0) {
              matchFailed("\"-gss-grid-\"");
            }
          }
        }
        if (result0 !== null) {
          result1 = parse_RowColDimension();
          if (result1 !== null) {
            result2 = parse___();
            if (result2 !== null) {
              if (input.charCodeAt(pos) === 34) {
                result3 = "\"";
                pos++;
              } else {
                result3 = null;
                if (reportFailures === 0) {
                  matchFailed("\"\\\"\"");
                }
              }
              if (result3 !== null) {
                result4 = parse_Line();
                if (result4 !== null) {
                  if (input.charCodeAt(pos) === 34) {
                    result5 = "\"";
                    pos++;
                  } else {
                    result5 = null;
                    if (reportFailures === 0) {
                      matchFailed("\"\\\"\"");
                    }
                  }
                  if (result5 !== null) {
                    result6 = parse___();
                    if (result6 !== null) {
                      result7 = [];
                      result8 = parse_AnyChar();
                      while (result8 !== null) {
                        result7.push(result8);
                        result8 = parse_AnyChar();
                      }
                      if (result7 !== null) {
                        result0 = [result0, result1, result2, result3, result4, result5, result6, result7];
                      } else {
                        result0 = null;
                        pos = pos1;
                      }
                    } else {
                      result0 = null;
                      pos = pos1;
                    }
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, d, line, stuff) {
            var vfl, props;
            vfl = "@"+ ['v','h'][d] +" "+ 
              line +" "+
              "in"+"(::)" +" "+ 
              "chain-"+p.size[d]+"(::["+p.size[d] +"]) "+       
              "chain-"+p.size[1-d] +" "+
              "chain-"+p.pos[d]+"(::["+p.pos[d] +"]) "+
              p.trim(stuff);
            p.addVFL(vfl.trim());
          })(pos0, result0[1], result0[4], result0[7]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("grid-rows / grid-cols");
        }
        return result0;
      }
      
      function parse_Template() {
        var result0, result1, result2, result3, result4, result5;
        var pos0, pos1;
        
        reportFailures++;
        pos0 = pos;
        pos1 = pos;
        if (input.substr(pos, 5) === "grid-") {
          result0 = "grid-";
          pos += 5;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("\"grid-\"");
          }
        }
        if (result0 === null) {
          if (input.substr(pos, 10) === "-gss-grid-") {
            result0 = "-gss-grid-";
            pos += 10;
          } else {
            result0 = null;
            if (reportFailures === 0) {
              matchFailed("\"-gss-grid-\"");
            }
          }
        }
        if (result0 !== null) {
          if (input.substr(pos, 8) === "template") {
            result1 = "template";
            pos += 8;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("\"template\"");
            }
          }
          if (result1 !== null) {
            result2 = parse___();
            if (result2 !== null) {
              if (/^[0-9a-zA-Z\-_]/.test(input.charAt(pos))) {
                result4 = input.charAt(pos);
                pos++;
              } else {
                result4 = null;
                if (reportFailures === 0) {
                  matchFailed("[0-9a-zA-Z\\-_]");
                }
              }
              if (result4 !== null) {
                result3 = [];
                while (result4 !== null) {
                  result3.push(result4);
                  if (/^[0-9a-zA-Z\-_]/.test(input.charAt(pos))) {
                    result4 = input.charAt(pos);
                    pos++;
                  } else {
                    result4 = null;
                    if (reportFailures === 0) {
                      matchFailed("[0-9a-zA-Z\\-_]");
                    }
                  }
                }
              } else {
                result3 = null;
              }
              if (result3 !== null) {
                result5 = parse_TemplateLine();
                if (result5 !== null) {
                  result4 = [];
                  while (result5 !== null) {
                    result4.push(result5);
                    result5 = parse_TemplateLine();
                  }
                } else {
                  result4 = null;
                }
                if (result4 !== null) {
                  result5 = parse_TemplateOptions();
                  if (result5 !== null) {
                    result0 = [result0, result1, result2, result3, result4, result5];
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, name, lines, options) {
             p.addTemplate(lines,p.stringify(name),options);    
          })(pos0, result0[3], result0[4], result0[5]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("grid-template");
        }
        return result0;
      }
      
      function parse_TemplateLine() {
        var result0, result1, result2, result3, result4;
        var pos0, pos1;
        
        reportFailures++;
        pos0 = pos;
        pos1 = pos;
        result0 = parse___();
        if (result0 !== null) {
          if (input.charCodeAt(pos) === 34) {
            result1 = "\"";
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("\"\\\"\"");
            }
          }
          if (result1 !== null) {
            result3 = parse_TemplateZone();
            if (result3 !== null) {
              result2 = [];
              while (result3 !== null) {
                result2.push(result3);
                result3 = parse_TemplateZone();
              }
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              if (input.charCodeAt(pos) === 34) {
                result3 = "\"";
                pos++;
              } else {
                result3 = null;
                if (reportFailures === 0) {
                  matchFailed("\"\\\"\"");
                }
              }
              if (result3 !== null) {
                result4 = parse___();
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, zones) {
            return p.processHZones(zones);    
          })(pos0, result0[2]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("template line");
        }
        return result0;
      }
      
      function parse_TemplateOptions() {
        var result0, result1;
        var pos0;
        
        reportFailures++;
        pos0 = pos;
        result0 = [];
        result1 = parse_TemplateOption();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_TemplateOption();
        }
        if (result0 !== null) {
          result0 = (function(offset, o) {
            var result = {};
            if (o) {
              result = {}
              o.forEach(function(obj){
                result[obj.key] = obj.value;
              })
            } 
            return result;
          })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("Template Options");
        }
        return result0;
      }
      
      function parse_TemplateOption() {
        var result0, result1, result2, result3, result4;
        var pos0, pos1;
        
        reportFailures++;
        pos0 = pos;
        pos1 = pos;
        result0 = parse___();
        if (result0 !== null) {
          result2 = parse_NameChars();
          if (result2 !== null) {
            result1 = [];
            while (result2 !== null) {
              result1.push(result2);
              result2 = parse_NameChars();
            }
          } else {
            result1 = null;
          }
          if (result1 !== null) {
            if (input.charCodeAt(pos) === 40) {
              result2 = "(";
              pos++;
            } else {
              result2 = null;
              if (reportFailures === 0) {
                matchFailed("\"(\"");
              }
            }
            if (result2 !== null) {
              result4 = parse_OpionValueChars();
              if (result4 !== null) {
                result3 = [];
                while (result4 !== null) {
                  result3.push(result4);
                  result4 = parse_OpionValueChars();
                }
              } else {
                result3 = null;
              }
              if (result3 !== null) {
                if (input.charCodeAt(pos) === 41) {
                  result4 = ")";
                  pos++;
                } else {
                  result4 = null;
                  if (reportFailures === 0) {
                    matchFailed("\")\"");
                  }
                }
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, key, value) {return {key:key.join(''), value:value.join('')};})(pos0, result0[1], result0[3]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("TemplateOption");
        }
        return result0;
      }
      
      function parse_OpionValueChars() {
        var result0;
        
        if (/^[^>=<!)]/.test(input.charAt(pos))) {
          result0 = input.charAt(pos);
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("[^>=<!)]");
          }
        }
        return result0;
      }
      
      function parse_TemplateZone() {
        var result0, result1, result2;
        var pos0, pos1;
        
        reportFailures++;
        pos0 = pos;
        if (input.charCodeAt(pos) === 48) {
          result1 = "0";
          pos++;
        } else {
          result1 = null;
          if (reportFailures === 0) {
            matchFailed("\"0\"");
          }
        }
        if (result1 !== null) {
          result0 = [];
          while (result1 !== null) {
            result0.push(result1);
            if (input.charCodeAt(pos) === 48) {
              result1 = "0";
              pos++;
            } else {
              result1 = null;
              if (reportFailures === 0) {
                matchFailed("\"0\"");
              }
            }
          }
        } else {
          result0 = null;
        }
        if (result0 === null) {
          if (input.charCodeAt(pos) === 49) {
            result1 = "1";
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("\"1\"");
            }
          }
          if (result1 !== null) {
            result0 = [];
            while (result1 !== null) {
              result0.push(result1);
              if (input.charCodeAt(pos) === 49) {
                result1 = "1";
                pos++;
              } else {
                result1 = null;
                if (reportFailures === 0) {
                  matchFailed("\"1\"");
                }
              }
            }
          } else {
            result0 = null;
          }
          if (result0 === null) {
            if (input.charCodeAt(pos) === 50) {
              result1 = "2";
              pos++;
            } else {
              result1 = null;
              if (reportFailures === 0) {
                matchFailed("\"2\"");
              }
            }
            if (result1 !== null) {
              result0 = [];
              while (result1 !== null) {
                result0.push(result1);
                if (input.charCodeAt(pos) === 50) {
                  result1 = "2";
                  pos++;
                } else {
                  result1 = null;
                  if (reportFailures === 0) {
                    matchFailed("\"2\"");
                  }
                }
              }
            } else {
              result0 = null;
            }
            if (result0 === null) {
              if (input.charCodeAt(pos) === 51) {
                result1 = "3";
                pos++;
              } else {
                result1 = null;
                if (reportFailures === 0) {
                  matchFailed("\"3\"");
                }
              }
              if (result1 !== null) {
                result0 = [];
                while (result1 !== null) {
                  result0.push(result1);
                  if (input.charCodeAt(pos) === 51) {
                    result1 = "3";
                    pos++;
                  } else {
                    result1 = null;
                    if (reportFailures === 0) {
                      matchFailed("\"3\"");
                    }
                  }
                }
              } else {
                result0 = null;
              }
              if (result0 === null) {
                if (input.charCodeAt(pos) === 52) {
                  result1 = "4";
                  pos++;
                } else {
                  result1 = null;
                  if (reportFailures === 0) {
                    matchFailed("\"4\"");
                  }
                }
                if (result1 !== null) {
                  result0 = [];
                  while (result1 !== null) {
                    result0.push(result1);
                    if (input.charCodeAt(pos) === 52) {
                      result1 = "4";
                      pos++;
                    } else {
                      result1 = null;
                      if (reportFailures === 0) {
                        matchFailed("\"4\"");
                      }
                    }
                  }
                } else {
                  result0 = null;
                }
                if (result0 === null) {
                  if (input.charCodeAt(pos) === 53) {
                    result1 = "5";
                    pos++;
                  } else {
                    result1 = null;
                    if (reportFailures === 0) {
                      matchFailed("\"5\"");
                    }
                  }
                  if (result1 !== null) {
                    result0 = [];
                    while (result1 !== null) {
                      result0.push(result1);
                      if (input.charCodeAt(pos) === 53) {
                        result1 = "5";
                        pos++;
                      } else {
                        result1 = null;
                        if (reportFailures === 0) {
                          matchFailed("\"5\"");
                        }
                      }
                    }
                  } else {
                    result0 = null;
                  }
                  if (result0 === null) {
                    if (input.charCodeAt(pos) === 54) {
                      result1 = "6";
                      pos++;
                    } else {
                      result1 = null;
                      if (reportFailures === 0) {
                        matchFailed("\"6\"");
                      }
                    }
                    if (result1 !== null) {
                      result0 = [];
                      while (result1 !== null) {
                        result0.push(result1);
                        if (input.charCodeAt(pos) === 54) {
                          result1 = "6";
                          pos++;
                        } else {
                          result1 = null;
                          if (reportFailures === 0) {
                            matchFailed("\"6\"");
                          }
                        }
                      }
                    } else {
                      result0 = null;
                    }
                    if (result0 === null) {
                      if (input.charCodeAt(pos) === 55) {
                        result1 = "7";
                        pos++;
                      } else {
                        result1 = null;
                        if (reportFailures === 0) {
                          matchFailed("\"7\"");
                        }
                      }
                      if (result1 !== null) {
                        result0 = [];
                        while (result1 !== null) {
                          result0.push(result1);
                          if (input.charCodeAt(pos) === 55) {
                            result1 = "7";
                            pos++;
                          } else {
                            result1 = null;
                            if (reportFailures === 0) {
                              matchFailed("\"7\"");
                            }
                          }
                        }
                      } else {
                        result0 = null;
                      }
                      if (result0 === null) {
                        if (input.charCodeAt(pos) === 56) {
                          result1 = "8";
                          pos++;
                        } else {
                          result1 = null;
                          if (reportFailures === 0) {
                            matchFailed("\"8\"");
                          }
                        }
                        if (result1 !== null) {
                          result0 = [];
                          while (result1 !== null) {
                            result0.push(result1);
                            if (input.charCodeAt(pos) === 56) {
                              result1 = "8";
                              pos++;
                            } else {
                              result1 = null;
                              if (reportFailures === 0) {
                                matchFailed("\"8\"");
                              }
                            }
                          }
                        } else {
                          result0 = null;
                        }
                        if (result0 === null) {
                          if (input.charCodeAt(pos) === 57) {
                            result1 = "9";
                            pos++;
                          } else {
                            result1 = null;
                            if (reportFailures === 0) {
                              matchFailed("\"9\"");
                            }
                          }
                          if (result1 !== null) {
                            result0 = [];
                            while (result1 !== null) {
                              result0.push(result1);
                              if (input.charCodeAt(pos) === 57) {
                                result1 = "9";
                                pos++;
                              } else {
                                result1 = null;
                                if (reportFailures === 0) {
                                  matchFailed("\"9\"");
                                }
                              }
                            }
                          } else {
                            result0 = null;
                          }
                          if (result0 === null) {
                            if (input.charCodeAt(pos) === 97) {
                              result1 = "a";
                              pos++;
                            } else {
                              result1 = null;
                              if (reportFailures === 0) {
                                matchFailed("\"a\"");
                              }
                            }
                            if (result1 !== null) {
                              result0 = [];
                              while (result1 !== null) {
                                result0.push(result1);
                                if (input.charCodeAt(pos) === 97) {
                                  result1 = "a";
                                  pos++;
                                } else {
                                  result1 = null;
                                  if (reportFailures === 0) {
                                    matchFailed("\"a\"");
                                  }
                                }
                              }
                            } else {
                              result0 = null;
                            }
                            if (result0 === null) {
                              if (input.charCodeAt(pos) === 98) {
                                result1 = "b";
                                pos++;
                              } else {
                                result1 = null;
                                if (reportFailures === 0) {
                                  matchFailed("\"b\"");
                                }
                              }
                              if (result1 !== null) {
                                result0 = [];
                                while (result1 !== null) {
                                  result0.push(result1);
                                  if (input.charCodeAt(pos) === 98) {
                                    result1 = "b";
                                    pos++;
                                  } else {
                                    result1 = null;
                                    if (reportFailures === 0) {
                                      matchFailed("\"b\"");
                                    }
                                  }
                                }
                              } else {
                                result0 = null;
                              }
                              if (result0 === null) {
                                if (input.charCodeAt(pos) === 99) {
                                  result1 = "c";
                                  pos++;
                                } else {
                                  result1 = null;
                                  if (reportFailures === 0) {
                                    matchFailed("\"c\"");
                                  }
                                }
                                if (result1 !== null) {
                                  result0 = [];
                                  while (result1 !== null) {
                                    result0.push(result1);
                                    if (input.charCodeAt(pos) === 99) {
                                      result1 = "c";
                                      pos++;
                                    } else {
                                      result1 = null;
                                      if (reportFailures === 0) {
                                        matchFailed("\"c\"");
                                      }
                                    }
                                  }
                                } else {
                                  result0 = null;
                                }
                                if (result0 === null) {
                                  if (input.charCodeAt(pos) === 100) {
                                    result1 = "d";
                                    pos++;
                                  } else {
                                    result1 = null;
                                    if (reportFailures === 0) {
                                      matchFailed("\"d\"");
                                    }
                                  }
                                  if (result1 !== null) {
                                    result0 = [];
                                    while (result1 !== null) {
                                      result0.push(result1);
                                      if (input.charCodeAt(pos) === 100) {
                                        result1 = "d";
                                        pos++;
                                      } else {
                                        result1 = null;
                                        if (reportFailures === 0) {
                                          matchFailed("\"d\"");
                                        }
                                      }
                                    }
                                  } else {
                                    result0 = null;
                                  }
                                  if (result0 === null) {
                                    if (input.charCodeAt(pos) === 101) {
                                      result1 = "e";
                                      pos++;
                                    } else {
                                      result1 = null;
                                      if (reportFailures === 0) {
                                        matchFailed("\"e\"");
                                      }
                                    }
                                    if (result1 !== null) {
                                      result0 = [];
                                      while (result1 !== null) {
                                        result0.push(result1);
                                        if (input.charCodeAt(pos) === 101) {
                                          result1 = "e";
                                          pos++;
                                        } else {
                                          result1 = null;
                                          if (reportFailures === 0) {
                                            matchFailed("\"e\"");
                                          }
                                        }
                                      }
                                    } else {
                                      result0 = null;
                                    }
                                    if (result0 === null) {
                                      pos1 = pos;
                                      if (input.charCodeAt(pos) === 102) {
                                        result1 = "f";
                                        pos++;
                                      } else {
                                        result1 = null;
                                        if (reportFailures === 0) {
                                          matchFailed("\"f\"");
                                        }
                                      }
                                      if (result1 !== null) {
                                        result0 = [];
                                        while (result1 !== null) {
                                          result0.push(result1);
                                          if (input.charCodeAt(pos) === 102) {
                                            result1 = "f";
                                            pos++;
                                          } else {
                                            result1 = null;
                                            if (reportFailures === 0) {
                                              matchFailed("\"f\"");
                                            }
                                          }
                                        }
                                      } else {
                                        result0 = null;
                                      }
                                      if (result0 !== null) {
                                        if (input.charCodeAt(pos) === 103) {
                                          result2 = "g";
                                          pos++;
                                        } else {
                                          result2 = null;
                                          if (reportFailures === 0) {
                                            matchFailed("\"g\"");
                                          }
                                        }
                                        if (result2 !== null) {
                                          result1 = [];
                                          while (result2 !== null) {
                                            result1.push(result2);
                                            if (input.charCodeAt(pos) === 103) {
                                              result2 = "g";
                                              pos++;
                                            } else {
                                              result2 = null;
                                              if (reportFailures === 0) {
                                                matchFailed("\"g\"");
                                              }
                                            }
                                          }
                                        } else {
                                          result1 = null;
                                        }
                                        if (result1 !== null) {
                                          result0 = [result0, result1];
                                        } else {
                                          result0 = null;
                                          pos = pos1;
                                        }
                                      } else {
                                        result0 = null;
                                        pos = pos1;
                                      }
                                      if (result0 === null) {
                                        if (input.charCodeAt(pos) === 104) {
                                          result1 = "h";
                                          pos++;
                                        } else {
                                          result1 = null;
                                          if (reportFailures === 0) {
                                            matchFailed("\"h\"");
                                          }
                                        }
                                        if (result1 !== null) {
                                          result0 = [];
                                          while (result1 !== null) {
                                            result0.push(result1);
                                            if (input.charCodeAt(pos) === 104) {
                                              result1 = "h";
                                              pos++;
                                            } else {
                                              result1 = null;
                                              if (reportFailures === 0) {
                                                matchFailed("\"h\"");
                                              }
                                            }
                                          }
                                        } else {
                                          result0 = null;
                                        }
                                        if (result0 === null) {
                                          if (input.charCodeAt(pos) === 105) {
                                            result1 = "i";
                                            pos++;
                                          } else {
                                            result1 = null;
                                            if (reportFailures === 0) {
                                              matchFailed("\"i\"");
                                            }
                                          }
                                          if (result1 !== null) {
                                            result0 = [];
                                            while (result1 !== null) {
                                              result0.push(result1);
                                              if (input.charCodeAt(pos) === 105) {
                                                result1 = "i";
                                                pos++;
                                              } else {
                                                result1 = null;
                                                if (reportFailures === 0) {
                                                  matchFailed("\"i\"");
                                                }
                                              }
                                            }
                                          } else {
                                            result0 = null;
                                          }
                                          if (result0 === null) {
                                            if (input.charCodeAt(pos) === 106) {
                                              result1 = "j";
                                              pos++;
                                            } else {
                                              result1 = null;
                                              if (reportFailures === 0) {
                                                matchFailed("\"j\"");
                                              }
                                            }
                                            if (result1 !== null) {
                                              result0 = [];
                                              while (result1 !== null) {
                                                result0.push(result1);
                                                if (input.charCodeAt(pos) === 106) {
                                                  result1 = "j";
                                                  pos++;
                                                } else {
                                                  result1 = null;
                                                  if (reportFailures === 0) {
                                                    matchFailed("\"j\"");
                                                  }
                                                }
                                              }
                                            } else {
                                              result0 = null;
                                            }
                                            if (result0 === null) {
                                              if (input.charCodeAt(pos) === 107) {
                                                result1 = "k";
                                                pos++;
                                              } else {
                                                result1 = null;
                                                if (reportFailures === 0) {
                                                  matchFailed("\"k\"");
                                                }
                                              }
                                              if (result1 !== null) {
                                                result0 = [];
                                                while (result1 !== null) {
                                                  result0.push(result1);
                                                  if (input.charCodeAt(pos) === 107) {
                                                    result1 = "k";
                                                    pos++;
                                                  } else {
                                                    result1 = null;
                                                    if (reportFailures === 0) {
                                                      matchFailed("\"k\"");
                                                    }
                                                  }
                                                }
                                              } else {
                                                result0 = null;
                                              }
                                              if (result0 === null) {
                                                if (input.charCodeAt(pos) === 108) {
                                                  result1 = "l";
                                                  pos++;
                                                } else {
                                                  result1 = null;
                                                  if (reportFailures === 0) {
                                                    matchFailed("\"l\"");
                                                  }
                                                }
                                                if (result1 !== null) {
                                                  result0 = [];
                                                  while (result1 !== null) {
                                                    result0.push(result1);
                                                    if (input.charCodeAt(pos) === 108) {
                                                      result1 = "l";
                                                      pos++;
                                                    } else {
                                                      result1 = null;
                                                      if (reportFailures === 0) {
                                                        matchFailed("\"l\"");
                                                      }
                                                    }
                                                  }
                                                } else {
                                                  result0 = null;
                                                }
                                                if (result0 === null) {
                                                  if (input.charCodeAt(pos) === 109) {
                                                    result1 = "m";
                                                    pos++;
                                                  } else {
                                                    result1 = null;
                                                    if (reportFailures === 0) {
                                                      matchFailed("\"m\"");
                                                    }
                                                  }
                                                  if (result1 !== null) {
                                                    result0 = [];
                                                    while (result1 !== null) {
                                                      result0.push(result1);
                                                      if (input.charCodeAt(pos) === 109) {
                                                        result1 = "m";
                                                        pos++;
                                                      } else {
                                                        result1 = null;
                                                        if (reportFailures === 0) {
                                                          matchFailed("\"m\"");
                                                        }
                                                      }
                                                    }
                                                  } else {
                                                    result0 = null;
                                                  }
                                                  if (result0 === null) {
                                                    if (input.charCodeAt(pos) === 110) {
                                                      result1 = "n";
                                                      pos++;
                                                    } else {
                                                      result1 = null;
                                                      if (reportFailures === 0) {
                                                        matchFailed("\"n\"");
                                                      }
                                                    }
                                                    if (result1 !== null) {
                                                      result0 = [];
                                                      while (result1 !== null) {
                                                        result0.push(result1);
                                                        if (input.charCodeAt(pos) === 110) {
                                                          result1 = "n";
                                                          pos++;
                                                        } else {
                                                          result1 = null;
                                                          if (reportFailures === 0) {
                                                            matchFailed("\"n\"");
                                                          }
                                                        }
                                                      }
                                                    } else {
                                                      result0 = null;
                                                    }
                                                    if (result0 === null) {
                                                      if (input.charCodeAt(pos) === 111) {
                                                        result1 = "o";
                                                        pos++;
                                                      } else {
                                                        result1 = null;
                                                        if (reportFailures === 0) {
                                                          matchFailed("\"o\"");
                                                        }
                                                      }
                                                      if (result1 !== null) {
                                                        result0 = [];
                                                        while (result1 !== null) {
                                                          result0.push(result1);
                                                          if (input.charCodeAt(pos) === 111) {
                                                            result1 = "o";
                                                            pos++;
                                                          } else {
                                                            result1 = null;
                                                            if (reportFailures === 0) {
                                                              matchFailed("\"o\"");
                                                            }
                                                          }
                                                        }
                                                      } else {
                                                        result0 = null;
                                                      }
                                                      if (result0 === null) {
                                                        if (input.charCodeAt(pos) === 112) {
                                                          result1 = "p";
                                                          pos++;
                                                        } else {
                                                          result1 = null;
                                                          if (reportFailures === 0) {
                                                            matchFailed("\"p\"");
                                                          }
                                                        }
                                                        if (result1 !== null) {
                                                          result0 = [];
                                                          while (result1 !== null) {
                                                            result0.push(result1);
                                                            if (input.charCodeAt(pos) === 112) {
                                                              result1 = "p";
                                                              pos++;
                                                            } else {
                                                              result1 = null;
                                                              if (reportFailures === 0) {
                                                                matchFailed("\"p\"");
                                                              }
                                                            }
                                                          }
                                                        } else {
                                                          result0 = null;
                                                        }
                                                        if (result0 === null) {
                                                          if (input.charCodeAt(pos) === 113) {
                                                            result1 = "q";
                                                            pos++;
                                                          } else {
                                                            result1 = null;
                                                            if (reportFailures === 0) {
                                                              matchFailed("\"q\"");
                                                            }
                                                          }
                                                          if (result1 !== null) {
                                                            result0 = [];
                                                            while (result1 !== null) {
                                                              result0.push(result1);
                                                              if (input.charCodeAt(pos) === 113) {
                                                                result1 = "q";
                                                                pos++;
                                                              } else {
                                                                result1 = null;
                                                                if (reportFailures === 0) {
                                                                  matchFailed("\"q\"");
                                                                }
                                                              }
                                                            }
                                                          } else {
                                                            result0 = null;
                                                          }
                                                          if (result0 === null) {
                                                            if (input.charCodeAt(pos) === 114) {
                                                              result1 = "r";
                                                              pos++;
                                                            } else {
                                                              result1 = null;
                                                              if (reportFailures === 0) {
                                                                matchFailed("\"r\"");
                                                              }
                                                            }
                                                            if (result1 !== null) {
                                                              result0 = [];
                                                              while (result1 !== null) {
                                                                result0.push(result1);
                                                                if (input.charCodeAt(pos) === 114) {
                                                                  result1 = "r";
                                                                  pos++;
                                                                } else {
                                                                  result1 = null;
                                                                  if (reportFailures === 0) {
                                                                    matchFailed("\"r\"");
                                                                  }
                                                                }
                                                              }
                                                            } else {
                                                              result0 = null;
                                                            }
                                                            if (result0 === null) {
                                                              if (input.charCodeAt(pos) === 115) {
                                                                result1 = "s";
                                                                pos++;
                                                              } else {
                                                                result1 = null;
                                                                if (reportFailures === 0) {
                                                                  matchFailed("\"s\"");
                                                                }
                                                              }
                                                              if (result1 !== null) {
                                                                result0 = [];
                                                                while (result1 !== null) {
                                                                  result0.push(result1);
                                                                  if (input.charCodeAt(pos) === 115) {
                                                                    result1 = "s";
                                                                    pos++;
                                                                  } else {
                                                                    result1 = null;
                                                                    if (reportFailures === 0) {
                                                                      matchFailed("\"s\"");
                                                                    }
                                                                  }
                                                                }
                                                              } else {
                                                                result0 = null;
                                                              }
                                                              if (result0 === null) {
                                                                if (input.charCodeAt(pos) === 116) {
                                                                  result1 = "t";
                                                                  pos++;
                                                                } else {
                                                                  result1 = null;
                                                                  if (reportFailures === 0) {
                                                                    matchFailed("\"t\"");
                                                                  }
                                                                }
                                                                if (result1 !== null) {
                                                                  result0 = [];
                                                                  while (result1 !== null) {
                                                                    result0.push(result1);
                                                                    if (input.charCodeAt(pos) === 116) {
                                                                      result1 = "t";
                                                                      pos++;
                                                                    } else {
                                                                      result1 = null;
                                                                      if (reportFailures === 0) {
                                                                        matchFailed("\"t\"");
                                                                      }
                                                                    }
                                                                  }
                                                                } else {
                                                                  result0 = null;
                                                                }
                                                                if (result0 === null) {
                                                                  if (input.charCodeAt(pos) === 117) {
                                                                    result1 = "u";
                                                                    pos++;
                                                                  } else {
                                                                    result1 = null;
                                                                    if (reportFailures === 0) {
                                                                      matchFailed("\"u\"");
                                                                    }
                                                                  }
                                                                  if (result1 !== null) {
                                                                    result0 = [];
                                                                    while (result1 !== null) {
                                                                      result0.push(result1);
                                                                      if (input.charCodeAt(pos) === 117) {
                                                                        result1 = "u";
                                                                        pos++;
                                                                      } else {
                                                                        result1 = null;
                                                                        if (reportFailures === 0) {
                                                                          matchFailed("\"u\"");
                                                                        }
                                                                      }
                                                                    }
                                                                  } else {
                                                                    result0 = null;
                                                                  }
                                                                  if (result0 === null) {
                                                                    if (input.charCodeAt(pos) === 118) {
                                                                      result1 = "v";
                                                                      pos++;
                                                                    } else {
                                                                      result1 = null;
                                                                      if (reportFailures === 0) {
                                                                        matchFailed("\"v\"");
                                                                      }
                                                                    }
                                                                    if (result1 !== null) {
                                                                      result0 = [];
                                                                      while (result1 !== null) {
                                                                        result0.push(result1);
                                                                        if (input.charCodeAt(pos) === 118) {
                                                                          result1 = "v";
                                                                          pos++;
                                                                        } else {
                                                                          result1 = null;
                                                                          if (reportFailures === 0) {
                                                                            matchFailed("\"v\"");
                                                                          }
                                                                        }
                                                                      }
                                                                    } else {
                                                                      result0 = null;
                                                                    }
                                                                    if (result0 === null) {
                                                                      if (input.charCodeAt(pos) === 119) {
                                                                        result1 = "w";
                                                                        pos++;
                                                                      } else {
                                                                        result1 = null;
                                                                        if (reportFailures === 0) {
                                                                          matchFailed("\"w\"");
                                                                        }
                                                                      }
                                                                      if (result1 !== null) {
                                                                        result0 = [];
                                                                        while (result1 !== null) {
                                                                          result0.push(result1);
                                                                          if (input.charCodeAt(pos) === 119) {
                                                                            result1 = "w";
                                                                            pos++;
                                                                          } else {
                                                                            result1 = null;
                                                                            if (reportFailures === 0) {
                                                                              matchFailed("\"w\"");
                                                                            }
                                                                          }
                                                                        }
                                                                      } else {
                                                                        result0 = null;
                                                                      }
                                                                      if (result0 === null) {
                                                                        if (input.charCodeAt(pos) === 120) {
                                                                          result1 = "x";
                                                                          pos++;
                                                                        } else {
                                                                          result1 = null;
                                                                          if (reportFailures === 0) {
                                                                            matchFailed("\"x\"");
                                                                          }
                                                                        }
                                                                        if (result1 !== null) {
                                                                          result0 = [];
                                                                          while (result1 !== null) {
                                                                            result0.push(result1);
                                                                            if (input.charCodeAt(pos) === 120) {
                                                                              result1 = "x";
                                                                              pos++;
                                                                            } else {
                                                                              result1 = null;
                                                                              if (reportFailures === 0) {
                                                                                matchFailed("\"x\"");
                                                                              }
                                                                            }
                                                                          }
                                                                        } else {
                                                                          result0 = null;
                                                                        }
                                                                        if (result0 === null) {
                                                                          if (input.charCodeAt(pos) === 121) {
                                                                            result1 = "y";
                                                                            pos++;
                                                                          } else {
                                                                            result1 = null;
                                                                            if (reportFailures === 0) {
                                                                              matchFailed("\"y\"");
                                                                            }
                                                                          }
                                                                          if (result1 !== null) {
                                                                            result0 = [];
                                                                            while (result1 !== null) {
                                                                              result0.push(result1);
                                                                              if (input.charCodeAt(pos) === 121) {
                                                                                result1 = "y";
                                                                                pos++;
                                                                              } else {
                                                                                result1 = null;
                                                                                if (reportFailures === 0) {
                                                                                  matchFailed("\"y\"");
                                                                                }
                                                                              }
                                                                            }
                                                                          } else {
                                                                            result0 = null;
                                                                          }
                                                                          if (result0 === null) {
                                                                            if (input.charCodeAt(pos) === 122) {
                                                                              result1 = "z";
                                                                              pos++;
                                                                            } else {
                                                                              result1 = null;
                                                                              if (reportFailures === 0) {
                                                                                matchFailed("\"z\"");
                                                                              }
                                                                            }
                                                                            if (result1 !== null) {
                                                                              result0 = [];
                                                                              while (result1 !== null) {
                                                                                result0.push(result1);
                                                                                if (input.charCodeAt(pos) === 122) {
                                                                                  result1 = "z";
                                                                                  pos++;
                                                                                } else {
                                                                                  result1 = null;
                                                                                  if (reportFailures === 0) {
                                                                                    matchFailed("\"z\"");
                                                                                  }
                                                                                }
                                                                              }
                                                                            } else {
                                                                              result0 = null;
                                                                            }
                                                                            if (result0 === null) {
                                                                              if (input.charCodeAt(pos) === 65) {
                                                                                result1 = "A";
                                                                                pos++;
                                                                              } else {
                                                                                result1 = null;
                                                                                if (reportFailures === 0) {
                                                                                  matchFailed("\"A\"");
                                                                                }
                                                                              }
                                                                              if (result1 !== null) {
                                                                                result0 = [];
                                                                                while (result1 !== null) {
                                                                                  result0.push(result1);
                                                                                  if (input.charCodeAt(pos) === 65) {
                                                                                    result1 = "A";
                                                                                    pos++;
                                                                                  } else {
                                                                                    result1 = null;
                                                                                    if (reportFailures === 0) {
                                                                                      matchFailed("\"A\"");
                                                                                    }
                                                                                  }
                                                                                }
                                                                              } else {
                                                                                result0 = null;
                                                                              }
                                                                              if (result0 === null) {
                                                                                if (input.charCodeAt(pos) === 66) {
                                                                                  result1 = "B";
                                                                                  pos++;
                                                                                } else {
                                                                                  result1 = null;
                                                                                  if (reportFailures === 0) {
                                                                                    matchFailed("\"B\"");
                                                                                  }
                                                                                }
                                                                                if (result1 !== null) {
                                                                                  result0 = [];
                                                                                  while (result1 !== null) {
                                                                                    result0.push(result1);
                                                                                    if (input.charCodeAt(pos) === 66) {
                                                                                      result1 = "B";
                                                                                      pos++;
                                                                                    } else {
                                                                                      result1 = null;
                                                                                      if (reportFailures === 0) {
                                                                                        matchFailed("\"B\"");
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                } else {
                                                                                  result0 = null;
                                                                                }
                                                                                if (result0 === null) {
                                                                                  if (input.charCodeAt(pos) === 67) {
                                                                                    result1 = "C";
                                                                                    pos++;
                                                                                  } else {
                                                                                    result1 = null;
                                                                                    if (reportFailures === 0) {
                                                                                      matchFailed("\"C\"");
                                                                                    }
                                                                                  }
                                                                                  if (result1 !== null) {
                                                                                    result0 = [];
                                                                                    while (result1 !== null) {
                                                                                      result0.push(result1);
                                                                                      if (input.charCodeAt(pos) === 67) {
                                                                                        result1 = "C";
                                                                                        pos++;
                                                                                      } else {
                                                                                        result1 = null;
                                                                                        if (reportFailures === 0) {
                                                                                          matchFailed("\"C\"");
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  } else {
                                                                                    result0 = null;
                                                                                  }
                                                                                  if (result0 === null) {
                                                                                    if (input.charCodeAt(pos) === 68) {
                                                                                      result1 = "D";
                                                                                      pos++;
                                                                                    } else {
                                                                                      result1 = null;
                                                                                      if (reportFailures === 0) {
                                                                                        matchFailed("\"D\"");
                                                                                      }
                                                                                    }
                                                                                    if (result1 !== null) {
                                                                                      result0 = [];
                                                                                      while (result1 !== null) {
                                                                                        result0.push(result1);
                                                                                        if (input.charCodeAt(pos) === 68) {
                                                                                          result1 = "D";
                                                                                          pos++;
                                                                                        } else {
                                                                                          result1 = null;
                                                                                          if (reportFailures === 0) {
                                                                                            matchFailed("\"D\"");
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    } else {
                                                                                      result0 = null;
                                                                                    }
                                                                                    if (result0 === null) {
                                                                                      if (input.charCodeAt(pos) === 69) {
                                                                                        result1 = "E";
                                                                                        pos++;
                                                                                      } else {
                                                                                        result1 = null;
                                                                                        if (reportFailures === 0) {
                                                                                          matchFailed("\"E\"");
                                                                                        }
                                                                                      }
                                                                                      if (result1 !== null) {
                                                                                        result0 = [];
                                                                                        while (result1 !== null) {
                                                                                          result0.push(result1);
                                                                                          if (input.charCodeAt(pos) === 69) {
                                                                                            result1 = "E";
                                                                                            pos++;
                                                                                          } else {
                                                                                            result1 = null;
                                                                                            if (reportFailures === 0) {
                                                                                              matchFailed("\"E\"");
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      } else {
                                                                                        result0 = null;
                                                                                      }
                                                                                      if (result0 === null) {
                                                                                        if (input.charCodeAt(pos) === 70) {
                                                                                          result1 = "F";
                                                                                          pos++;
                                                                                        } else {
                                                                                          result1 = null;
                                                                                          if (reportFailures === 0) {
                                                                                            matchFailed("\"F\"");
                                                                                          }
                                                                                        }
                                                                                        if (result1 !== null) {
                                                                                          result0 = [];
                                                                                          while (result1 !== null) {
                                                                                            result0.push(result1);
                                                                                            if (input.charCodeAt(pos) === 70) {
                                                                                              result1 = "F";
                                                                                              pos++;
                                                                                            } else {
                                                                                              result1 = null;
                                                                                              if (reportFailures === 0) {
                                                                                                matchFailed("\"F\"");
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        } else {
                                                                                          result0 = null;
                                                                                        }
                                                                                        if (result0 === null) {
                                                                                          if (input.charCodeAt(pos) === 71) {
                                                                                            result1 = "G";
                                                                                            pos++;
                                                                                          } else {
                                                                                            result1 = null;
                                                                                            if (reportFailures === 0) {
                                                                                              matchFailed("\"G\"");
                                                                                            }
                                                                                          }
                                                                                          if (result1 !== null) {
                                                                                            result0 = [];
                                                                                            while (result1 !== null) {
                                                                                              result0.push(result1);
                                                                                              if (input.charCodeAt(pos) === 71) {
                                                                                                result1 = "G";
                                                                                                pos++;
                                                                                              } else {
                                                                                                result1 = null;
                                                                                                if (reportFailures === 0) {
                                                                                                  matchFailed("\"G\"");
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          } else {
                                                                                            result0 = null;
                                                                                          }
                                                                                          if (result0 === null) {
                                                                                            if (input.charCodeAt(pos) === 72) {
                                                                                              result1 = "H";
                                                                                              pos++;
                                                                                            } else {
                                                                                              result1 = null;
                                                                                              if (reportFailures === 0) {
                                                                                                matchFailed("\"H\"");
                                                                                              }
                                                                                            }
                                                                                            if (result1 !== null) {
                                                                                              result0 = [];
                                                                                              while (result1 !== null) {
                                                                                                result0.push(result1);
                                                                                                if (input.charCodeAt(pos) === 72) {
                                                                                                  result1 = "H";
                                                                                                  pos++;
                                                                                                } else {
                                                                                                  result1 = null;
                                                                                                  if (reportFailures === 0) {
                                                                                                    matchFailed("\"H\"");
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            } else {
                                                                                              result0 = null;
                                                                                            }
                                                                                            if (result0 === null) {
                                                                                              if (input.charCodeAt(pos) === 73) {
                                                                                                result1 = "I";
                                                                                                pos++;
                                                                                              } else {
                                                                                                result1 = null;
                                                                                                if (reportFailures === 0) {
                                                                                                  matchFailed("\"I\"");
                                                                                                }
                                                                                              }
                                                                                              if (result1 !== null) {
                                                                                                result0 = [];
                                                                                                while (result1 !== null) {
                                                                                                  result0.push(result1);
                                                                                                  if (input.charCodeAt(pos) === 73) {
                                                                                                    result1 = "I";
                                                                                                    pos++;
                                                                                                  } else {
                                                                                                    result1 = null;
                                                                                                    if (reportFailures === 0) {
                                                                                                      matchFailed("\"I\"");
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              } else {
                                                                                                result0 = null;
                                                                                              }
                                                                                              if (result0 === null) {
                                                                                                if (input.charCodeAt(pos) === 74) {
                                                                                                  result1 = "J";
                                                                                                  pos++;
                                                                                                } else {
                                                                                                  result1 = null;
                                                                                                  if (reportFailures === 0) {
                                                                                                    matchFailed("\"J\"");
                                                                                                  }
                                                                                                }
                                                                                                if (result1 !== null) {
                                                                                                  result0 = [];
                                                                                                  while (result1 !== null) {
                                                                                                    result0.push(result1);
                                                                                                    if (input.charCodeAt(pos) === 74) {
                                                                                                      result1 = "J";
                                                                                                      pos++;
                                                                                                    } else {
                                                                                                      result1 = null;
                                                                                                      if (reportFailures === 0) {
                                                                                                        matchFailed("\"J\"");
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                } else {
                                                                                                  result0 = null;
                                                                                                }
                                                                                                if (result0 === null) {
                                                                                                  if (input.charCodeAt(pos) === 75) {
                                                                                                    result1 = "K";
                                                                                                    pos++;
                                                                                                  } else {
                                                                                                    result1 = null;
                                                                                                    if (reportFailures === 0) {
                                                                                                      matchFailed("\"K\"");
                                                                                                    }
                                                                                                  }
                                                                                                  if (result1 !== null) {
                                                                                                    result0 = [];
                                                                                                    while (result1 !== null) {
                                                                                                      result0.push(result1);
                                                                                                      if (input.charCodeAt(pos) === 75) {
                                                                                                        result1 = "K";
                                                                                                        pos++;
                                                                                                      } else {
                                                                                                        result1 = null;
                                                                                                        if (reportFailures === 0) {
                                                                                                          matchFailed("\"K\"");
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  } else {
                                                                                                    result0 = null;
                                                                                                  }
                                                                                                  if (result0 === null) {
                                                                                                    if (input.charCodeAt(pos) === 76) {
                                                                                                      result1 = "L";
                                                                                                      pos++;
                                                                                                    } else {
                                                                                                      result1 = null;
                                                                                                      if (reportFailures === 0) {
                                                                                                        matchFailed("\"L\"");
                                                                                                      }
                                                                                                    }
                                                                                                    if (result1 !== null) {
                                                                                                      result0 = [];
                                                                                                      while (result1 !== null) {
                                                                                                        result0.push(result1);
                                                                                                        if (input.charCodeAt(pos) === 76) {
                                                                                                          result1 = "L";
                                                                                                          pos++;
                                                                                                        } else {
                                                                                                          result1 = null;
                                                                                                          if (reportFailures === 0) {
                                                                                                            matchFailed("\"L\"");
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    } else {
                                                                                                      result0 = null;
                                                                                                    }
                                                                                                    if (result0 === null) {
                                                                                                      if (input.charCodeAt(pos) === 77) {
                                                                                                        result1 = "M";
                                                                                                        pos++;
                                                                                                      } else {
                                                                                                        result1 = null;
                                                                                                        if (reportFailures === 0) {
                                                                                                          matchFailed("\"M\"");
                                                                                                        }
                                                                                                      }
                                                                                                      if (result1 !== null) {
                                                                                                        result0 = [];
                                                                                                        while (result1 !== null) {
                                                                                                          result0.push(result1);
                                                                                                          if (input.charCodeAt(pos) === 77) {
                                                                                                            result1 = "M";
                                                                                                            pos++;
                                                                                                          } else {
                                                                                                            result1 = null;
                                                                                                            if (reportFailures === 0) {
                                                                                                              matchFailed("\"M\"");
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      } else {
                                                                                                        result0 = null;
                                                                                                      }
                                                                                                      if (result0 === null) {
                                                                                                        if (input.charCodeAt(pos) === 78) {
                                                                                                          result1 = "N";
                                                                                                          pos++;
                                                                                                        } else {
                                                                                                          result1 = null;
                                                                                                          if (reportFailures === 0) {
                                                                                                            matchFailed("\"N\"");
                                                                                                          }
                                                                                                        }
                                                                                                        if (result1 !== null) {
                                                                                                          result0 = [];
                                                                                                          while (result1 !== null) {
                                                                                                            result0.push(result1);
                                                                                                            if (input.charCodeAt(pos) === 78) {
                                                                                                              result1 = "N";
                                                                                                              pos++;
                                                                                                            } else {
                                                                                                              result1 = null;
                                                                                                              if (reportFailures === 0) {
                                                                                                                matchFailed("\"N\"");
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        } else {
                                                                                                          result0 = null;
                                                                                                        }
                                                                                                        if (result0 === null) {
                                                                                                          if (input.charCodeAt(pos) === 79) {
                                                                                                            result1 = "O";
                                                                                                            pos++;
                                                                                                          } else {
                                                                                                            result1 = null;
                                                                                                            if (reportFailures === 0) {
                                                                                                              matchFailed("\"O\"");
                                                                                                            }
                                                                                                          }
                                                                                                          if (result1 !== null) {
                                                                                                            result0 = [];
                                                                                                            while (result1 !== null) {
                                                                                                              result0.push(result1);
                                                                                                              if (input.charCodeAt(pos) === 79) {
                                                                                                                result1 = "O";
                                                                                                                pos++;
                                                                                                              } else {
                                                                                                                result1 = null;
                                                                                                                if (reportFailures === 0) {
                                                                                                                  matchFailed("\"O\"");
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          } else {
                                                                                                            result0 = null;
                                                                                                          }
                                                                                                          if (result0 === null) {
                                                                                                            if (input.charCodeAt(pos) === 80) {
                                                                                                              result1 = "P";
                                                                                                              pos++;
                                                                                                            } else {
                                                                                                              result1 = null;
                                                                                                              if (reportFailures === 0) {
                                                                                                                matchFailed("\"P\"");
                                                                                                              }
                                                                                                            }
                                                                                                            if (result1 !== null) {
                                                                                                              result0 = [];
                                                                                                              while (result1 !== null) {
                                                                                                                result0.push(result1);
                                                                                                                if (input.charCodeAt(pos) === 80) {
                                                                                                                  result1 = "P";
                                                                                                                  pos++;
                                                                                                                } else {
                                                                                                                  result1 = null;
                                                                                                                  if (reportFailures === 0) {
                                                                                                                    matchFailed("\"P\"");
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            } else {
                                                                                                              result0 = null;
                                                                                                            }
                                                                                                            if (result0 === null) {
                                                                                                              if (input.charCodeAt(pos) === 81) {
                                                                                                                result1 = "Q";
                                                                                                                pos++;
                                                                                                              } else {
                                                                                                                result1 = null;
                                                                                                                if (reportFailures === 0) {
                                                                                                                  matchFailed("\"Q\"");
                                                                                                                }
                                                                                                              }
                                                                                                              if (result1 !== null) {
                                                                                                                result0 = [];
                                                                                                                while (result1 !== null) {
                                                                                                                  result0.push(result1);
                                                                                                                  if (input.charCodeAt(pos) === 81) {
                                                                                                                    result1 = "Q";
                                                                                                                    pos++;
                                                                                                                  } else {
                                                                                                                    result1 = null;
                                                                                                                    if (reportFailures === 0) {
                                                                                                                      matchFailed("\"Q\"");
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              } else {
                                                                                                                result0 = null;
                                                                                                              }
                                                                                                              if (result0 === null) {
                                                                                                                if (input.charCodeAt(pos) === 82) {
                                                                                                                  result1 = "R";
                                                                                                                  pos++;
                                                                                                                } else {
                                                                                                                  result1 = null;
                                                                                                                  if (reportFailures === 0) {
                                                                                                                    matchFailed("\"R\"");
                                                                                                                  }
                                                                                                                }
                                                                                                                if (result1 !== null) {
                                                                                                                  result0 = [];
                                                                                                                  while (result1 !== null) {
                                                                                                                    result0.push(result1);
                                                                                                                    if (input.charCodeAt(pos) === 82) {
                                                                                                                      result1 = "R";
                                                                                                                      pos++;
                                                                                                                    } else {
                                                                                                                      result1 = null;
                                                                                                                      if (reportFailures === 0) {
                                                                                                                        matchFailed("\"R\"");
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                } else {
                                                                                                                  result0 = null;
                                                                                                                }
                                                                                                                if (result0 === null) {
                                                                                                                  if (input.charCodeAt(pos) === 83) {
                                                                                                                    result1 = "S";
                                                                                                                    pos++;
                                                                                                                  } else {
                                                                                                                    result1 = null;
                                                                                                                    if (reportFailures === 0) {
                                                                                                                      matchFailed("\"S\"");
                                                                                                                    }
                                                                                                                  }
                                                                                                                  if (result1 !== null) {
                                                                                                                    result0 = [];
                                                                                                                    while (result1 !== null) {
                                                                                                                      result0.push(result1);
                                                                                                                      if (input.charCodeAt(pos) === 83) {
                                                                                                                        result1 = "S";
                                                                                                                        pos++;
                                                                                                                      } else {
                                                                                                                        result1 = null;
                                                                                                                        if (reportFailures === 0) {
                                                                                                                          matchFailed("\"S\"");
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  } else {
                                                                                                                    result0 = null;
                                                                                                                  }
                                                                                                                  if (result0 === null) {
                                                                                                                    if (input.charCodeAt(pos) === 84) {
                                                                                                                      result1 = "T";
                                                                                                                      pos++;
                                                                                                                    } else {
                                                                                                                      result1 = null;
                                                                                                                      if (reportFailures === 0) {
                                                                                                                        matchFailed("\"T\"");
                                                                                                                      }
                                                                                                                    }
                                                                                                                    if (result1 !== null) {
                                                                                                                      result0 = [];
                                                                                                                      while (result1 !== null) {
                                                                                                                        result0.push(result1);
                                                                                                                        if (input.charCodeAt(pos) === 84) {
                                                                                                                          result1 = "T";
                                                                                                                          pos++;
                                                                                                                        } else {
                                                                                                                          result1 = null;
                                                                                                                          if (reportFailures === 0) {
                                                                                                                            matchFailed("\"T\"");
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    } else {
                                                                                                                      result0 = null;
                                                                                                                    }
                                                                                                                    if (result0 === null) {
                                                                                                                      if (input.charCodeAt(pos) === 85) {
                                                                                                                        result1 = "U";
                                                                                                                        pos++;
                                                                                                                      } else {
                                                                                                                        result1 = null;
                                                                                                                        if (reportFailures === 0) {
                                                                                                                          matchFailed("\"U\"");
                                                                                                                        }
                                                                                                                      }
                                                                                                                      if (result1 !== null) {
                                                                                                                        result0 = [];
                                                                                                                        while (result1 !== null) {
                                                                                                                          result0.push(result1);
                                                                                                                          if (input.charCodeAt(pos) === 85) {
                                                                                                                            result1 = "U";
                                                                                                                            pos++;
                                                                                                                          } else {
                                                                                                                            result1 = null;
                                                                                                                            if (reportFailures === 0) {
                                                                                                                              matchFailed("\"U\"");
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      } else {
                                                                                                                        result0 = null;
                                                                                                                      }
                                                                                                                      if (result0 === null) {
                                                                                                                        if (input.charCodeAt(pos) === 86) {
                                                                                                                          result1 = "V";
                                                                                                                          pos++;
                                                                                                                        } else {
                                                                                                                          result1 = null;
                                                                                                                          if (reportFailures === 0) {
                                                                                                                            matchFailed("\"V\"");
                                                                                                                          }
                                                                                                                        }
                                                                                                                        if (result1 !== null) {
                                                                                                                          result0 = [];
                                                                                                                          while (result1 !== null) {
                                                                                                                            result0.push(result1);
                                                                                                                            if (input.charCodeAt(pos) === 86) {
                                                                                                                              result1 = "V";
                                                                                                                              pos++;
                                                                                                                            } else {
                                                                                                                              result1 = null;
                                                                                                                              if (reportFailures === 0) {
                                                                                                                                matchFailed("\"V\"");
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        } else {
                                                                                                                          result0 = null;
                                                                                                                        }
                                                                                                                        if (result0 === null) {
                                                                                                                          if (input.charCodeAt(pos) === 87) {
                                                                                                                            result1 = "W";
                                                                                                                            pos++;
                                                                                                                          } else {
                                                                                                                            result1 = null;
                                                                                                                            if (reportFailures === 0) {
                                                                                                                              matchFailed("\"W\"");
                                                                                                                            }
                                                                                                                          }
                                                                                                                          if (result1 !== null) {
                                                                                                                            result0 = [];
                                                                                                                            while (result1 !== null) {
                                                                                                                              result0.push(result1);
                                                                                                                              if (input.charCodeAt(pos) === 87) {
                                                                                                                                result1 = "W";
                                                                                                                                pos++;
                                                                                                                              } else {
                                                                                                                                result1 = null;
                                                                                                                                if (reportFailures === 0) {
                                                                                                                                  matchFailed("\"W\"");
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          } else {
                                                                                                                            result0 = null;
                                                                                                                          }
                                                                                                                          if (result0 === null) {
                                                                                                                            if (input.charCodeAt(pos) === 88) {
                                                                                                                              result1 = "X";
                                                                                                                              pos++;
                                                                                                                            } else {
                                                                                                                              result1 = null;
                                                                                                                              if (reportFailures === 0) {
                                                                                                                                matchFailed("\"X\"");
                                                                                                                              }
                                                                                                                            }
                                                                                                                            if (result1 !== null) {
                                                                                                                              result0 = [];
                                                                                                                              while (result1 !== null) {
                                                                                                                                result0.push(result1);
                                                                                                                                if (input.charCodeAt(pos) === 88) {
                                                                                                                                  result1 = "X";
                                                                                                                                  pos++;
                                                                                                                                } else {
                                                                                                                                  result1 = null;
                                                                                                                                  if (reportFailures === 0) {
                                                                                                                                    matchFailed("\"X\"");
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            } else {
                                                                                                                              result0 = null;
                                                                                                                            }
                                                                                                                            if (result0 === null) {
                                                                                                                              if (input.charCodeAt(pos) === 89) {
                                                                                                                                result1 = "Y";
                                                                                                                                pos++;
                                                                                                                              } else {
                                                                                                                                result1 = null;
                                                                                                                                if (reportFailures === 0) {
                                                                                                                                  matchFailed("\"Y\"");
                                                                                                                                }
                                                                                                                              }
                                                                                                                              if (result1 !== null) {
                                                                                                                                result0 = [];
                                                                                                                                while (result1 !== null) {
                                                                                                                                  result0.push(result1);
                                                                                                                                  if (input.charCodeAt(pos) === 89) {
                                                                                                                                    result1 = "Y";
                                                                                                                                    pos++;
                                                                                                                                  } else {
                                                                                                                                    result1 = null;
                                                                                                                                    if (reportFailures === 0) {
                                                                                                                                      matchFailed("\"Y\"");
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              } else {
                                                                                                                                result0 = null;
                                                                                                                              }
                                                                                                                              if (result0 === null) {
                                                                                                                                if (input.charCodeAt(pos) === 90) {
                                                                                                                                  result1 = "Z";
                                                                                                                                  pos++;
                                                                                                                                } else {
                                                                                                                                  result1 = null;
                                                                                                                                  if (reportFailures === 0) {
                                                                                                                                    matchFailed("\"Z\"");
                                                                                                                                  }
                                                                                                                                }
                                                                                                                                if (result1 !== null) {
                                                                                                                                  result0 = [];
                                                                                                                                  while (result1 !== null) {
                                                                                                                                    result0.push(result1);
                                                                                                                                    if (input.charCodeAt(pos) === 90) {
                                                                                                                                      result1 = "Z";
                                                                                                                                      pos++;
                                                                                                                                    } else {
                                                                                                                                      result1 = null;
                                                                                                                                      if (reportFailures === 0) {
                                                                                                                                        matchFailed("\"Z\"");
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                } else {
                                                                                                                                  result0 = null;
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        if (result0 !== null) {
          result0 = (function(offset, zone) {
            return {xspan:zone.length,name:zone[0],x:zone};
          })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        if (result0 === null) {
          pos0 = pos;
          if (input.charCodeAt(pos) === 46) {
            result0 = ".";
            pos++;
          } else {
            result0 = null;
            if (reportFailures === 0) {
              matchFailed("\".\"");
            }
          }
          if (result0 !== null) {
            result0 = (function(offset) {
              var name = p.getBlankName();
              return {xspan:1,name:name,x:[name]};
            })(pos0);
          }
          if (result0 === null) {
            pos = pos0;
          }
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("Template Zone");
        }
        return result0;
      }
      
      function parse_RowColDimension() {
        var result0;
        var pos0;
        
        reportFailures++;
        pos0 = pos;
        if (input.substr(pos, 4) === "rows") {
          result0 = "rows";
          pos += 4;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("\"rows\"");
          }
        }
        if (result0 !== null) {
          result0 = (function(offset) {return 0;})(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        if (result0 === null) {
          pos0 = pos;
          if (input.substr(pos, 4) === "cols") {
            result0 = "cols";
            pos += 4;
          } else {
            result0 = null;
            if (reportFailures === 0) {
              matchFailed("\"cols\"");
            }
          }
          if (result0 !== null) {
            result0 = (function(offset) {return 1;})(pos0);
          }
          if (result0 === null) {
            pos = pos0;
          }
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("Row or Col Dimension");
        }
        return result0;
      }
      
      function parse_Line() {
        var result0, result1, result2, result3;
        var pos0, pos1;
        
        reportFailures++;
        pos0 = pos;
        pos1 = pos;
        result0 = parse_Connection();
        result0 = result0 !== null ? result0 : "";
        if (result0 !== null) {
          result1 = parse_LineChunk();
          if (result1 !== null) {
            result2 = [];
            result3 = parse_LineChunk();
            while (result3 !== null) {
              result2.push(result3);
              result3 = parse_LineChunk();
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, headcon, head, tails) {
            var result; 
            result = "|";
            if (headcon) {result += headcon;}
            result += head;
            tails.forEach(function (tail){
              result += tail;
            });
            result += "|";
            return result;
          })(pos0, result0[0], result0[1], result0[2]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("1D Line");
        }
        return result0;
      }
      
      function parse_LineChunk() {
        var result0, result1, result2, result3, result4;
        var pos0, pos1;
        
        reportFailures++;
        pos0 = pos;
        pos1 = pos;
        result0 = parse___();
        if (result0 !== null) {
          result2 = parse_VirtualNameChars();
          if (result2 !== null) {
            result1 = [];
            while (result2 !== null) {
              result1.push(result2);
              result2 = parse_VirtualNameChars();
            }
          } else {
            result1 = null;
          }
          if (result1 !== null) {
            result2 = parse___();
            if (result2 !== null) {
              result3 = parse_Connection();
              result3 = result3 !== null ? result3 : "";
              if (result3 !== null) {
                result4 = parse___();
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, name, connect) {
            
            var result;
            name = p.trim(name);
            result = '["'+name+'"]';    
            p.addVirtual(name);
            if (connect) {
              result = result + connect;
            }
            return result;
          })(pos0, result0[1], result0[3]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("!D LineChunk");
        }
        return result0;
      }
      
      function parse_Connection() {
        var result0, result1, result2;
        var pos0, pos1;
        
        reportFailures++;
        pos0 = pos;
        pos1 = pos;
        if (input.charCodeAt(pos) === 45) {
          result0 = "-";
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("\"-\"");
          }
        }
        if (result0 === null) {
          if (input.charCodeAt(pos) === 126) {
            result0 = "~";
            pos++;
          } else {
            result0 = null;
            if (reportFailures === 0) {
              matchFailed("\"~\"");
            }
          }
        }
        if (result0 !== null) {
          if (/^[0-9]/.test(input.charAt(pos))) {
            result2 = input.charAt(pos);
            pos++;
          } else {
            result2 = null;
            if (reportFailures === 0) {
              matchFailed("[0-9]");
            }
          }
          if (result2 !== null) {
            result1 = [];
            while (result2 !== null) {
              result1.push(result2);
              if (/^[0-9]/.test(input.charAt(pos))) {
                result2 = input.charAt(pos);
                pos++;
              } else {
                result2 = null;
                if (reportFailures === 0) {
                  matchFailed("[0-9]");
                }
              }
            }
          } else {
            result1 = null;
          }
          if (result1 === null) {
            if (input.charCodeAt(pos) === 45) {
              result1 = "-";
              pos++;
            } else {
              result1 = null;
              if (reportFailures === 0) {
                matchFailed("\"-\"");
              }
            }
          }
          result1 = result1 !== null ? result1 : "";
          if (result1 !== null) {
            if (input.charCodeAt(pos) === 45) {
              result2 = "-";
              pos++;
            } else {
              result2 = null;
              if (reportFailures === 0) {
                matchFailed("\"-\"");
              }
            }
            if (result2 === null) {
              if (input.charCodeAt(pos) === 126) {
                result2 = "~";
                pos++;
              } else {
                result2 = null;
                if (reportFailures === 0) {
                  matchFailed("\"~\"");
                }
              }
            }
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, connect) {return p.stringify(connect);})(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("1D Connection");
        }
        return result0;
      }
      
      function parse_ConnectionTypes() {
        var result0, result1, result2;
        var pos0;
        
        reportFailures++;
        if (input.charCodeAt(pos) === 45) {
          result0 = "-";
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("\"-\"");
          }
        }
        if (result0 === null) {
          if (input.charCodeAt(pos) === 126) {
            result0 = "~";
            pos++;
          } else {
            result0 = null;
            if (reportFailures === 0) {
              matchFailed("\"~\"");
            }
          }
          if (result0 === null) {
            pos0 = pos;
            if (input.charCodeAt(pos) === 45) {
              result0 = "-";
              pos++;
            } else {
              result0 = null;
              if (reportFailures === 0) {
                matchFailed("\"-\"");
              }
            }
            if (result0 !== null) {
              if (/^[0-9]/.test(input.charAt(pos))) {
                result2 = input.charAt(pos);
                pos++;
              } else {
                result2 = null;
                if (reportFailures === 0) {
                  matchFailed("[0-9]");
                }
              }
              if (result2 !== null) {
                result1 = [];
                while (result2 !== null) {
                  result1.push(result2);
                  if (/^[0-9]/.test(input.charAt(pos))) {
                    result2 = input.charAt(pos);
                    pos++;
                  } else {
                    result2 = null;
                    if (reportFailures === 0) {
                      matchFailed("[0-9]");
                    }
                  }
                }
              } else {
                result1 = null;
              }
              if (result1 !== null) {
                if (input.charCodeAt(pos) === 45) {
                  result2 = "-";
                  pos++;
                } else {
                  result2 = null;
                  if (reportFailures === 0) {
                    matchFailed("\"-\"");
                  }
                }
                if (result2 !== null) {
                  result0 = [result0, result1, result2];
                } else {
                  result0 = null;
                  pos = pos0;
                }
              } else {
                result0 = null;
                pos = pos0;
              }
            } else {
              result0 = null;
              pos = pos0;
            }
            if (result0 === null) {
              pos0 = pos;
              if (input.charCodeAt(pos) === 126) {
                result0 = "~";
                pos++;
              } else {
                result0 = null;
                if (reportFailures === 0) {
                  matchFailed("\"~\"");
                }
              }
              if (result0 !== null) {
                if (/^[0-9]/.test(input.charAt(pos))) {
                  result2 = input.charAt(pos);
                  pos++;
                } else {
                  result2 = null;
                  if (reportFailures === 0) {
                    matchFailed("[0-9]");
                  }
                }
                if (result2 !== null) {
                  result1 = [];
                  while (result2 !== null) {
                    result1.push(result2);
                    if (/^[0-9]/.test(input.charAt(pos))) {
                      result2 = input.charAt(pos);
                      pos++;
                    } else {
                      result2 = null;
                      if (reportFailures === 0) {
                        matchFailed("[0-9]");
                      }
                    }
                  }
                } else {
                  result1 = null;
                }
                if (result1 === null) {
                  if (input.charCodeAt(pos) === 45) {
                    result1 = "-";
                    pos++;
                  } else {
                    result1 = null;
                    if (reportFailures === 0) {
                      matchFailed("\"-\"");
                    }
                  }
                }
                if (result1 !== null) {
                  if (input.charCodeAt(pos) === 126) {
                    result2 = "~";
                    pos++;
                  } else {
                    result2 = null;
                    if (reportFailures === 0) {
                      matchFailed("\"~\"");
                    }
                  }
                  if (result2 !== null) {
                    result0 = [result0, result1, result2];
                  } else {
                    result0 = null;
                    pos = pos0;
                  }
                } else {
                  result0 = null;
                  pos = pos0;
                }
              } else {
                result0 = null;
                pos = pos0;
              }
            }
          }
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("!D Connection Type");
        }
        return result0;
      }
      
      function parse_VirtualNameChars() {
        var result0;
        
        if (/^[a-zA-Z0-9#_$:]/.test(input.charAt(pos))) {
          result0 = input.charAt(pos);
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("[a-zA-Z0-9#_$:]");
          }
        }
        return result0;
      }
      
      function parse_NameChars() {
        var result0;
        
        if (/^[a-zA-Z0-9#.\-_$:]/.test(input.charAt(pos))) {
          result0 = input.charAt(pos);
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("[a-zA-Z0-9#.\\-_$:]");
          }
        }
        return result0;
      }
      
      function parse_NameCharsWithSpace() {
        var result0;
        
        result0 = parse_NameChars();
        if (result0 === null) {
          if (input.charCodeAt(pos) === 32) {
            result0 = " ";
            pos++;
          } else {
            result0 = null;
            if (reportFailures === 0) {
              matchFailed("\" \"");
            }
          }
        }
        return result0;
      }
      
      function parse_Literal() {
        var result0;
        var pos0;
        
        pos0 = pos;
        result0 = parse_Number();
        if (result0 !== null) {
          result0 = (function(offset, val) {
            return [ "number",
              val
            ];
          })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        return result0;
      }
      
      function parse_Number() {
        var result0;
        
        result0 = parse_Real();
        if (result0 === null) {
          result0 = parse_Integer();
        }
        return result0;
      }
      
      function parse_Integer() {
        var result0, result1;
        var pos0;
        
        pos0 = pos;
        if (/^[0-9]/.test(input.charAt(pos))) {
          result1 = input.charAt(pos);
          pos++;
        } else {
          result1 = null;
          if (reportFailures === 0) {
            matchFailed("[0-9]");
          }
        }
        if (result1 !== null) {
          result0 = [];
          while (result1 !== null) {
            result0.push(result1);
            if (/^[0-9]/.test(input.charAt(pos))) {
              result1 = input.charAt(pos);
              pos++;
            } else {
              result1 = null;
              if (reportFailures === 0) {
                matchFailed("[0-9]");
              }
            }
          }
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          result0 = (function(offset, digits) {
            return parseInt(digits.join(""), 10);
          })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        return result0;
      }
      
      function parse_Real() {
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_Integer();
        if (result0 !== null) {
          if (input.charCodeAt(pos) === 46) {
            result1 = ".";
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("\".\"");
            }
          }
          if (result1 !== null) {
            result2 = parse_Integer();
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, digits) {
            return parseFloat(digits.join(""));
          })(pos0, result0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        return result0;
      }
      
      function parse_SignedInteger() {
        var result0, result1, result2;
        var pos0;
        
        pos0 = pos;
        if (/^[\-+]/.test(input.charAt(pos))) {
          result0 = input.charAt(pos);
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("[\\-+]");
          }
        }
        result0 = result0 !== null ? result0 : "";
        if (result0 !== null) {
          if (/^[0-9]/.test(input.charAt(pos))) {
            result2 = input.charAt(pos);
            pos++;
          } else {
            result2 = null;
            if (reportFailures === 0) {
              matchFailed("[0-9]");
            }
          }
          if (result2 !== null) {
            result1 = [];
            while (result2 !== null) {
              result1.push(result2);
              if (/^[0-9]/.test(input.charAt(pos))) {
                result2 = input.charAt(pos);
                pos++;
              } else {
                result2 = null;
                if (reportFailures === 0) {
                  matchFailed("[0-9]");
                }
              }
            }
          } else {
            result1 = null;
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos0;
          }
        } else {
          result0 = null;
          pos = pos0;
        }
        return result0;
      }
      
      function parse_SourceCharacter() {
        var result0;
        
        if (input.length > pos) {
          result0 = input.charAt(pos);
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("any character");
          }
        }
        return result0;
      }
      
      function parse_WhiteSpace() {
        var result0;
        
        reportFailures++;
        if (/^[\t\x0B\f \xA0\uFEFF]/.test(input.charAt(pos))) {
          result0 = input.charAt(pos);
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("[\\t\\x0B\\f \\xA0\\uFEFF]");
          }
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("whitespace");
        }
        return result0;
      }
      
      function parse_LineTerminator() {
        var result0;
        
        if (/^[\n\r\u2028\u2029]/.test(input.charAt(pos))) {
          result0 = input.charAt(pos);
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("[\\n\\r\\u2028\\u2029]");
          }
        }
        return result0;
      }
      
      function parse_LineTerminatorSequence() {
        var result0;
        
        reportFailures++;
        if (input.charCodeAt(pos) === 10) {
          result0 = "\n";
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("\"\\n\"");
          }
        }
        if (result0 === null) {
          if (input.substr(pos, 2) === "\r\n") {
            result0 = "\r\n";
            pos += 2;
          } else {
            result0 = null;
            if (reportFailures === 0) {
              matchFailed("\"\\r\\n\"");
            }
          }
          if (result0 === null) {
            if (input.charCodeAt(pos) === 13) {
              result0 = "\r";
              pos++;
            } else {
              result0 = null;
              if (reportFailures === 0) {
                matchFailed("\"\\r\"");
              }
            }
            if (result0 === null) {
              if (input.charCodeAt(pos) === 8232) {
                result0 = "\u2028";
                pos++;
              } else {
                result0 = null;
                if (reportFailures === 0) {
                  matchFailed("\"\\u2028\"");
                }
              }
              if (result0 === null) {
                if (input.charCodeAt(pos) === 8233) {
                  result0 = "\u2029";
                  pos++;
                } else {
                  result0 = null;
                  if (reportFailures === 0) {
                    matchFailed("\"\\u2029\"");
                  }
                }
              }
            }
          }
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("end of line");
        }
        return result0;
      }
      
      function parse_AnyChar() {
        var result0;
        
        if (/^[a-zA-Z0-9 .,#:+?!^=()_\-$*\/\\""'[\]]/.test(input.charAt(pos))) {
          result0 = input.charAt(pos);
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("[a-zA-Z0-9 .,#:+?!^=()_\\-$*\\/\\\\\"\"'[\\]]");
          }
        }
        return result0;
      }
      
      function parse_EOS() {
        var result0, result1;
        var pos0;
        
        reportFailures++;
        pos0 = pos;
        result0 = parse___();
        if (result0 !== null) {
          if (input.charCodeAt(pos) === 59) {
            result1 = ";";
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("\";\"");
            }
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos0;
          }
        } else {
          result0 = null;
          pos = pos0;
        }
        if (result0 === null) {
          pos0 = pos;
          result0 = parse__();
          if (result0 !== null) {
            result1 = parse_LineTerminatorSequence();
            if (result1 !== null) {
              result0 = [result0, result1];
            } else {
              result0 = null;
              pos = pos0;
            }
          } else {
            result0 = null;
            pos = pos0;
          }
          if (result0 === null) {
            pos0 = pos;
            result0 = parse___();
            if (result0 !== null) {
              result1 = parse_EOF();
              if (result1 !== null) {
                result0 = [result0, result1];
              } else {
                result0 = null;
                pos = pos0;
              }
            } else {
              result0 = null;
              pos = pos0;
            }
          }
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("End of Statement");
        }
        return result0;
      }
      
      function parse_EOF() {
        var result0;
        var pos0;
        
        pos0 = pos;
        reportFailures++;
        if (input.length > pos) {
          result0 = input.charAt(pos);
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("any character");
          }
        }
        reportFailures--;
        if (result0 === null) {
          result0 = "";
        } else {
          result0 = null;
          pos = pos0;
        }
        return result0;
      }
      
      function parse_Comment() {
        var result0;
        
        reportFailures++;
        result0 = parse_MultiLineComment();
        if (result0 === null) {
          result0 = parse_SingleLineComment();
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("Comment");
        }
        return result0;
      }
      
      function parse_MultiLineComment() {
        var result0, result1, result2, result3;
        var pos0, pos1, pos2;
        
        reportFailures++;
        pos0 = pos;
        if (input.substr(pos, 2) === "/*") {
          result0 = "/*";
          pos += 2;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("\"/*\"");
          }
        }
        if (result0 !== null) {
          result1 = [];
          pos1 = pos;
          pos2 = pos;
          reportFailures++;
          if (input.substr(pos, 2) === "*/") {
            result2 = "*/";
            pos += 2;
          } else {
            result2 = null;
            if (reportFailures === 0) {
              matchFailed("\"*/\"");
            }
          }
          reportFailures--;
          if (result2 === null) {
            result2 = "";
          } else {
            result2 = null;
            pos = pos2;
          }
          if (result2 !== null) {
            result3 = parse_SourceCharacter();
            if (result3 !== null) {
              result2 = [result2, result3];
            } else {
              result2 = null;
              pos = pos1;
            }
          } else {
            result2 = null;
            pos = pos1;
          }
          while (result2 !== null) {
            result1.push(result2);
            pos1 = pos;
            pos2 = pos;
            reportFailures++;
            if (input.substr(pos, 2) === "*/") {
              result2 = "*/";
              pos += 2;
            } else {
              result2 = null;
              if (reportFailures === 0) {
                matchFailed("\"*/\"");
              }
            }
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              result3 = parse_SourceCharacter();
              if (result3 !== null) {
                result2 = [result2, result3];
              } else {
                result2 = null;
                pos = pos1;
              }
            } else {
              result2 = null;
              pos = pos1;
            }
          }
          if (result1 !== null) {
            if (input.substr(pos, 2) === "*/") {
              result2 = "*/";
              pos += 2;
            } else {
              result2 = null;
              if (reportFailures === 0) {
                matchFailed("\"*/\"");
              }
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos0;
            }
          } else {
            result0 = null;
            pos = pos0;
          }
        } else {
          result0 = null;
          pos = pos0;
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("MultiLineComment");
        }
        return result0;
      }
      
      function parse_MultiLineCommentNoLineTerminator() {
        var result0, result1, result2, result3;
        var pos0, pos1, pos2;
        
        reportFailures++;
        pos0 = pos;
        if (input.substr(pos, 2) === "/*") {
          result0 = "/*";
          pos += 2;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("\"/*\"");
          }
        }
        if (result0 !== null) {
          result1 = [];
          pos1 = pos;
          pos2 = pos;
          reportFailures++;
          if (input.substr(pos, 2) === "*/") {
            result2 = "*/";
            pos += 2;
          } else {
            result2 = null;
            if (reportFailures === 0) {
              matchFailed("\"*/\"");
            }
          }
          if (result2 === null) {
            result2 = parse_LineTerminator();
          }
          reportFailures--;
          if (result2 === null) {
            result2 = "";
          } else {
            result2 = null;
            pos = pos2;
          }
          if (result2 !== null) {
            result3 = parse_SourceCharacter();
            if (result3 !== null) {
              result2 = [result2, result3];
            } else {
              result2 = null;
              pos = pos1;
            }
          } else {
            result2 = null;
            pos = pos1;
          }
          while (result2 !== null) {
            result1.push(result2);
            pos1 = pos;
            pos2 = pos;
            reportFailures++;
            if (input.substr(pos, 2) === "*/") {
              result2 = "*/";
              pos += 2;
            } else {
              result2 = null;
              if (reportFailures === 0) {
                matchFailed("\"*/\"");
              }
            }
            if (result2 === null) {
              result2 = parse_LineTerminator();
            }
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              result3 = parse_SourceCharacter();
              if (result3 !== null) {
                result2 = [result2, result3];
              } else {
                result2 = null;
                pos = pos1;
              }
            } else {
              result2 = null;
              pos = pos1;
            }
          }
          if (result1 !== null) {
            if (input.substr(pos, 2) === "*/") {
              result2 = "*/";
              pos += 2;
            } else {
              result2 = null;
              if (reportFailures === 0) {
                matchFailed("\"*/\"");
              }
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos0;
            }
          } else {
            result0 = null;
            pos = pos0;
          }
        } else {
          result0 = null;
          pos = pos0;
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("MultiLineCommentNoLineTerminator");
        }
        return result0;
      }
      
      function parse_SingleLineComment() {
        var result0, result1, result2, result3;
        var pos0, pos1, pos2;
        
        reportFailures++;
        pos0 = pos;
        if (input.substr(pos, 2) === "//") {
          result0 = "//";
          pos += 2;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("\"//\"");
          }
        }
        if (result0 !== null) {
          result1 = [];
          pos1 = pos;
          pos2 = pos;
          reportFailures++;
          result2 = parse_LineTerminator();
          reportFailures--;
          if (result2 === null) {
            result2 = "";
          } else {
            result2 = null;
            pos = pos2;
          }
          if (result2 !== null) {
            result3 = parse_SourceCharacter();
            if (result3 !== null) {
              result2 = [result2, result3];
            } else {
              result2 = null;
              pos = pos1;
            }
          } else {
            result2 = null;
            pos = pos1;
          }
          while (result2 !== null) {
            result1.push(result2);
            pos1 = pos;
            pos2 = pos;
            reportFailures++;
            result2 = parse_LineTerminator();
            reportFailures--;
            if (result2 === null) {
              result2 = "";
            } else {
              result2 = null;
              pos = pos2;
            }
            if (result2 !== null) {
              result3 = parse_SourceCharacter();
              if (result3 !== null) {
                result2 = [result2, result3];
              } else {
                result2 = null;
                pos = pos1;
              }
            } else {
              result2 = null;
              pos = pos1;
            }
          }
          if (result1 !== null) {
            result2 = parse_LineTerminator();
            if (result2 === null) {
              result2 = parse_EOF();
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos0;
            }
          } else {
            result0 = null;
            pos = pos0;
          }
        } else {
          result0 = null;
          pos = pos0;
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("Single Line Comment");
        }
        return result0;
      }
      
      function parse__() {
        var result0, result1;
        
        reportFailures++;
        result0 = [];
        result1 = parse_WhiteSpace();
        if (result1 === null) {
          result1 = parse_MultiLineCommentNoLineTerminator();
          if (result1 === null) {
            result1 = parse_SingleLineComment();
          }
        }
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_WhiteSpace();
          if (result1 === null) {
            result1 = parse_MultiLineCommentNoLineTerminator();
            if (result1 === null) {
              result1 = parse_SingleLineComment();
            }
          }
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("Whitespace / Comment");
        }
        return result0;
      }
      
      function parse___() {
        var result0, result1;
        
        reportFailures++;
        result0 = [];
        result1 = parse_WhiteSpace();
        if (result1 === null) {
          result1 = parse_LineTerminatorSequence();
          if (result1 === null) {
            result1 = parse_Comment();
          }
        }
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_WhiteSpace();
          if (result1 === null) {
            result1 = parse_LineTerminatorSequence();
            if (result1 === null) {
              result1 = parse_Comment();
            }
          }
        }
        reportFailures--;
        if (reportFailures === 0 && result0 === null) {
          matchFailed("Whitespace / Comment / Newline");
        }
        return result0;
      }
      
      
      function cleanupExpected(expected) {
        expected.sort();
        
        var lastExpected = null;
        var cleanExpected = [];
        for (var i = 0; i < expected.length; i++) {
          if (expected[i] !== lastExpected) {
            cleanExpected.push(expected[i]);
            lastExpected = expected[i];
          }
        }
        return cleanExpected;
      }
      
      function computeErrorPosition() {
        /*
         * The first idea was to use |String.split| to break the input up to the
         * error position along newlines and derive the line and column from
         * there. However IE's |split| implementation is so broken that it was
         * enough to prevent it.
         */
        
        var line = 1;
        var column = 1;
        var seenCR = false;
        
        for (var i = 0; i < Math.max(pos, rightmostFailuresPos); i++) {
          var ch = input.charAt(i);
          if (ch === "\n") {
            if (!seenCR) { line++; }
            column = 1;
            seenCR = false;
          } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
            line++;
            column = 1;
            seenCR = true;
          } else {
            column++;
            seenCR = false;
          }
        }
        
        return { line: line, column: column };
      }
      
      
        var p, parser, vfls, virtuals, ccss, asts, blankCount; 
      
        p = parser = this;
        
        blankCount = 0;
        
        p.getBlankName = function () {
          blankCount++;
          return "blank-" + blankCount;
        };
        
        p.size = ['width','height'];
        p.pos = ['x','y'];
      
        p.getResults = function () {
          var _ccss = virtuals.sort().join(" ");
          if (_ccss.length == 0) {
            _ccss = ccss;
          }
          else {
            _ccss = ["@virtual "+_ccss].concat(ccss);
          }
          return {
              //asts: asts, // DEBUG
              ccss: _ccss,
              vfl: vfls
            }
        }
      
        asts = [];
        
        p.addAST = function (stuff) {
          asts.push(stuff);
        }
      
        ccss = [];
        
        p.addCCSS = function (statement) {
          ccss.push(statement)
        }
      
        virtuals = [];
        
        p.addVirtual = function (virtual) {
          if (virtuals.indexOf(virtual) === -1) {
            virtuals.push('"'+virtual+'"');
          }
        }
      
        vfls = [];
      
        p.addVFL = function (vfl) {
          vfls.push(vfl);
        }
      
      
        p.addTemplate = function (lines,name,options) {
          var ast, prefix, container;
          
          prefix = name+'-';
          ast = p.processHLines(lines);
          ast.name = name;
          
          if (options.in) {
            container = options.in;
          }
          else {
            container = "::";
          }
      
          var md, mdOp, outergap, gaps, g, hasGap;
          
          gaps = {};
          hasGap = false;
          
          g = options.gap;
          if (g) { 
            hasGap = true;
            gaps.top = g;
            gaps.right = g;
            gaps.bottom = g;
            gaps.left = g;
            gaps.h = g;
            gaps.v = g;
          }    
          g = options['h-gap'];
          if (g) { 
            hasGap = true;
            gaps.right = g;
            gaps.left = g;
            gaps.h = g;
          }
          g = options['v-gap'];
          if (g) { 
            hasGap = true;
            gaps.top = g;
            gaps.bottom = g;
            gaps.v = g;
          }
          g = options['outer-gap'];
          if (g) { 
            hasGap = true;
            gaps.top = g;
            gaps.right = g;
            gaps.bottom = g;
            gaps.left = g;
          }
          g = options['top-gap'];
          if (g) { 
            hasGap = true;
            gaps.top = g;
          }
          g = options['right-gap']; 
          if (g) { 
            hasGap = true;
            gaps.right = g;
          }
          g = options['bottom-gap']; 
          if (g) { 
            hasGap = true;
            gaps.bottom = g;
          }
          g = options['left-gap']; 
          if (g) { 
            hasGap = true;
            gaps.left = g;
          }
          
          
          if (hasGap) {
            mdOp = "<=";
          } else {
            mdOp = "==";
          }
          
          
          // md-width     
          // -------------------------------------------------
          // == (this[width] - gap.left - gap.right - gap * (span - 1)) / span
          
          md = '::['+name+'-md-width] ' + mdOp + ' ';
          if (gaps.right || gaps.left || gaps.h) {
            md += '(' + container + '[width]';
            if (gaps.right) {md += ' - ' + gaps.right;}
            if (gaps.left ) {md += ' - ' + gaps.left;}      
            if (gaps.h && ast.yspan > 1){
              md += ' - ' + gaps.h;
              if (ast.yspan > 2) {md += ' * ' + (ast.yspan - 1);}
            }
            md += ')';
          } else {
            md += container + '[width]';
          }
          if (ast.yspan > 1){md += ' / ' + ast.yspan;}
          md += " !require";
          p.addCCSS(md);
          
          
          // md-height
          // -------------------------------------------------
        
          md = '::['+name+'-md-height] ' + mdOp + ' ';
          if (gaps.top || gaps.bottom || gaps.v) {
            md += '(' + container + '[height]';
            if (gaps.top) {md += ' - ' + gaps.top;}
            if (gaps.bottom ) {md += ' - ' + gaps.bottom;}
            if (gaps.v && ast.xspan > 1){
              md += ' - ' + gaps.v;
              if (ast.xspan > 2) {md += ' * ' + (ast.xspan - 1);}
            }
            md += ')';
          } else {
            md += container + '[height]';
          }    
          if (ast.xspan > 1){md += ' / ' + ast.xspan;}
          md += " !require";
          p.addCCSS(md);
          
          
          // virtual widths
          // -------------------------------------------------
          // == md-width * span - gap * (span - 1)
          
          var xspan, wccss;
          for (var el in ast.widths) {
            p.addVirtual(prefix+el);
            xspan = ast.widths[el];
            wccss = '"'+prefix+el+'"[width] == ';
            wccss +='::['+ast.name+'-md-width]';
            if (xspan > 1) {
              wccss += ' * ' + xspan;
              if (gaps.h) {
                wccss += ' + ' + gaps.h;
                if (xspan > 2) {
                  wccss += ' * ' + (xspan - 1);
                }
              }
            }
            p.addCCSS(wccss)
          }
          
          
          // virtual heights
          // -------------------------------------------------
          
          var yspan, hccss;
          for (var el in ast.heights) {
            yspan = ast.heights[el];
            hccss = '"'+prefix+el+'"[height] == ';
            hccss +='::['+ast.name+'-md-height]';
            if (yspan > 1) {
              hccss += ' * ' + yspan;
              if (gaps.v) {
                hccss += ' + ' + gaps.v;
                if (yspan > 2) {
                  hccss += ' * ' + (yspan - 1);
                }
              }
            }
            p.addCCSS(hccss);
          }
      
          var vfl, vflFooter;
          ast.v.forEach(function(brij){
            brij = brij.split("%-v-%");
            vfl = '@v ["'+prefix+brij[0]+'"]';
            if (gaps.v) {vfl += '-';}
            vfl += '["'+prefix+brij[1]+'"]';
            if (gaps.v) {vfl += ' gap('+gaps.v+')';}
            p.addVFL(vfl);
          });
         
          ast.h.forEach(function(brij){
            brij = brij.split("%-h-%");
            vfl = '@h ["'+prefix+brij[0]+'"]';
            if (gaps.h) {vfl += '-';}
            vfl += '["'+prefix+brij[1]+'"]';
            if (gaps.h) {vfl += ' gap('+gaps.h+')';}
            p.addVFL(vfl);
          });
          
          var edgeEls;
          
          edgeEls = [];
          ast.cols[0].y.forEach(function(el){
            if (edgeEls.indexOf(el) > -1) {return null;}
            edgeEls.push(el);
            vfl = '@h |';
            if (gaps.left) {vfl += '-';}
            vfl += '["'+prefix+el+'"]'+' in('+container+')';   
            if (gaps.left) {vfl += ' gap('+gaps.left+')';}
            p.addVFL(vfl);
          });
      
          edgeEls = [];
          ast.rows[0].x.forEach(function(el){
            if (edgeEls.indexOf(el) > -1) {return null;}
            edgeEls.push(el);
            vfl = '@v |';
            if (gaps.top) {vfl += '-';}
            vfl += '["'+prefix+el+'"]'+' in('+container+')';
            if (gaps.top) {vfl += ' gap('+gaps.top+')';}
            p.addVFL(vfl);
          });
      
          edgeEls = [];
          ast.cols[ast.cols.length-1].y.forEach(function(el){
            if (edgeEls.indexOf(el) > -1) {return null;}
            edgeEls.push(el);
            vfl = '@h ["'+prefix+el+'"]';
            if (gaps.right) {vfl += '-';}
            vfl +='|'+' in('+container+')';
            if (gaps.right) {vfl += ' gap('+gaps.right+')';}
            p.addVFL(vfl);
          });
      
          edgeEls = [];
          ast.rows[ast.rows.length-1].x.forEach(function(el){
            if (edgeEls.indexOf(el) > -1) {return null;}
            edgeEls.push(el);
            vfl = '@v ["'+prefix+el+'"]';
            if (gaps.bottom) {vfl += '-';}
            vfl += '|'+' in('+container+')';
            if (gaps.bottom) {vfl += ' gap('+gaps.bottom+')';}
            p.addVFL(vfl);
          });
      
          
      
          //p.addVFL(ast);
          p.addAST(ast);
          
          return ast;
        }
      
        p.processHZones = function (zones) {
          var xspan, curr, prev, h, x, widths,
            dotCounter, isDot;
          xspan = 0;
          h = [];
          widths = {};
          x = [];
          dotCounter = 0;    
          zones.forEach(function(zone){
            isDot = false;
            curr = zone.name;
            
            // "." are each treated as an empty zone
            if (curr === "-DOT-") {
              isDot = false;
              dotCounter++;
              curr += dotCounter;
            }
            x = x.concat(zone.x);
            delete zone.x;
            if (prev && prev !== curr) {   
              h.push([prev,curr].join("%-h-%"));
            }
            widths[zone.name] = zone.xspan;
            xspan += zone.xspan;
            prev = curr;
          });
          return {xspan:xspan,x:x,h:h,widths:widths};
        }
        
        p.processHLines = function (lines) {
          var cols,i,j,col,results;
          results = {heights:{},widths:{},v:[],h:[]};
          cols = [];
          i = 0;
      
      
          lines.forEach(function(row){
            j = 0;
            for (var nam in row.widths) {        
              results.widths[nam] = row.widths[nam];
            }
            row.h.forEach(function(hh){
              if (results.h.indexOf(hh) === -1) {results.h.push(hh);}
            })
            row.x.forEach(function(xx){
              var col;
              if (!cols[j]) {cols[j] = {y:[]};}
              col = cols[j];
              col.y.push(xx);
              j++;
            })
            i++;
          });    
      
          cols.forEach(function(col){
            var curr, currspan, prev, vStr, heights, i, v;
            v = [];            
            currspan = 0;
            prev = null;
            i = 0;
            col.y.forEach(function(name){        
              curr = name;
              currspan++;
              if (col.y[i+1]!==curr) {
                results.heights[name] = currspan;
                currspan = 0;
              }
              if (prev && prev !== curr) {
                vStr = [prev,curr].join("%-v-%")
                if (results.v.indexOf(vStr) === -1) {results.v.push(vStr);}
              }
              prev = curr;
              i++;
            })
          })
      
          results.yspan = cols.length;
          results.xspan = lines.length;
          results.cols = cols;
          results.rows = lines;           
      
          return results;
        }  
      
      
        p.error = function (m,l,c) {
          if (!!l && !!c) {
            m = m + " {line:" + l + ", col:" + c + "}";
          }
          console.error(m);
          return m;
        };
      
        p.trim = function (x) {
          if (typeof x === "string") {return x.trim();}
          if (x instanceof Array) {return x.join("").trim();}
          return ""
        };
      
        p.flatten = function (array, isShallow) {
          var index = -1,
            length = array ? array.length : 0,
            result = [];
      
          while (++index < length) {
            var value = array[index];
      
            if (value instanceof Array) {
              Array.prototype.push.apply(result, isShallow ? value : p.flatten(value));
            }
            else {
              result.push(value);
            }
          }
          return result;
        }
      
        p.stringify = function (array) {
          return p.trim(p.flatten(array));
        };
        
      
      
      var result = parseFunctions[startRule]();
      
      /*
       * The parser is now in one of the following three states:
       *
       * 1. The parser successfully parsed the whole input.
       *
       *    - |result !== null|
       *    - |pos === input.length|
       *    - |rightmostFailuresExpected| may or may not contain something
       *
       * 2. The parser successfully parsed only a part of the input.
       *
       *    - |result !== null|
       *    - |pos < input.length|
       *    - |rightmostFailuresExpected| may or may not contain something
       *
       * 3. The parser did not successfully parse any part of the input.
       *
       *   - |result === null|
       *   - |pos === 0|
       *   - |rightmostFailuresExpected| contains at least one failure
       *
       * All code following this comment (including called functions) must
       * handle these states.
       */
      if (result === null || pos !== input.length) {
        var offset = Math.max(pos, rightmostFailuresPos);
        var found = offset < input.length ? input.charAt(offset) : null;
        var errorPosition = computeErrorPosition();
        
        throw new this.SyntaxError(
          cleanupExpected(rightmostFailuresExpected),
          found,
          offset,
          errorPosition.line,
          errorPosition.column
        );
      }
      
      return result;
    },
    
    /* Returns the parser source code. */
    toSource: function() { return this._source; }
  };
  
  /* Thrown when a parser encounters a syntax error. */
  
  result.SyntaxError = function(expected, found, offset, line, column) {
    function buildMessage(expected, found) {
      var expectedHumanized, foundHumanized;
      
      switch (expected.length) {
        case 0:
          expectedHumanized = "end of input";
          break;
        case 1:
          expectedHumanized = expected[0];
          break;
        default:
          expectedHumanized = expected.slice(0, expected.length - 1).join(", ")
            + " or "
            + expected[expected.length - 1];
      }
      
      foundHumanized = found ? quote(found) : "end of input";
      
      return "Expected " + expectedHumanized + " but " + foundHumanized + " found.";
    }
    
    this.name = "SyntaxError";
    this.expected = expected;
    this.found = found;
    this.message = buildMessage(expected, found);
    this.offset = offset;
    this.line = line;
    this.column = column;
  };
  
  result.SyntaxError.prototype = Error.prototype;
  
  return result;
})();